# Reference: https://www.nginx.com/resources/wiki/start/topics/examples/full/

# worker_processes 1;
# worker_processes 2;

events {
  worker_connections 1024;
}

http {
  server {
    listen 80;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://nodes;
      # proxy_pass http://socket-rtc;

      # enable WebSockets
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  server {
    listen 443 ssl;

    # # enable to send more than default size
    # client_max_body_size 5000M;

    ssl_certificate           /etc/nginx/cert.crt;
    ssl_certificate_key       /etc/nginx/cert.key;

    # ssl on;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    # access_log            /var/log/nginx/jenkins.access.log;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://nodes;
      # proxy_pass http://socket-rtc;

      # enable WebSockets
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }


  # # ref https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/
  
  upstream nodes {
    # enable sticky session
    ip_hash;

    server socket-rtc:4001;
    # server server-john;
    # server server-paul;

    # server server-john:3000;
    # server server-paul:3000;
    # server server-george:3000;
    # server server-ringo:3000;
  }
}
